definitions:
  models.AccountEntity:
    properties:
      first_name:
        description: FirstName
        type: string
      last_name:
        description: LastName
        type: string
      todos:
        description: '@Todos'
        items:
          $ref: '#/definitions/models.TodoEntity'
        type: array
      user_name:
        description: Username
        type: string
    type: object
  models.ChangePasswordInput:
    properties:
      new:
        type: string
      old:
        type: string
      subject:
        type: integer
    type: object
  models.LoginInput:
    properties:
      password:
        type: string
      user_name:
        type: string
    type: object
  models.SignUpInput:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  models.TodoEntity:
    properties:
      account_id:
        description: AccountID
        type: integer
      description:
        description: Description
        type: string
      priority:
        description: "Priority\t[1 = not important, 2 = important, 3 = very important]"
        type: integer
      status:
        description: Status [in_progress, complete, ]
        type: string
      title:
        description: Title
        type: string
    type: object
  models.TodoInput:
    properties:
      description:
        type: string
      priority:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
  models.TokenBundleOutput:
    properties:
      expire:
        description: Expire time of Token and CentrifugeToken
        type: string
      refresh:
        description: Refresh token string used for refreshing authentication and give
          fresh token
        type: string
      token:
        description: Token is JWT/PASETO token staring for storing in client side
          as access token
        type: string
    type: object
  todo.BaseResult:
    properties:
      errors:
        description: Errors provides list off error that occurred in processing request
        items:
          type: string
        type: array
      result:
        description: Result single/array of any type (object/number/string/boolean)
          that returns as response
      result_count:
        description: ResultCount specified number of records that returned in result_count
          field expected result been array.
        type: integer
    type: object
info:
  contact: {}
paths:
  /:
    get:
      consumes:
      - application/json
      description: get all todos with specified info and Account ID
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.TodoEntity'
                  type: array
              type: object
      security:
      - Bearer Authenticate: []
      summary: get all todo
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: add new todo task with specified info and Account ID
      parameters:
      - description: todo input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.TodoInput'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.TodoEntity'
              type: object
      security:
      - Bearer Authenticate: []
      summary: add new todo task
      tags:
      - todos
  /{id}:
    delete:
      consumes:
      - application/json
      description: delete todo with specified info and Account ID
      parameters:
      - description: todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  type: string
              type: object
      security:
      - Bearer Authenticate: []
      summary: delete todo
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: get one todo with specified info and Account ID
      parameters:
      - description: todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.TodoEntity'
              type: object
      security:
      - Bearer Authenticate: []
      summary: get one todo
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: update todo task with specified info and Account ID AND ID
      parameters:
      - description: todo input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.TodoInput'
      - description: todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.TodoEntity'
              type: object
      security:
      - Bearer Authenticate: []
      summary: update todo task
      tags:
      - todos
  /change_pass:
    patch:
      consumes:
      - application/json
      description: change password with specified id
      parameters:
      - description: change password input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  type: string
              type: object
      security:
      - Bearer Authenticate: []
      summary: change password
      tags:
      - account
  /signin:
    post:
      consumes:
      - application/json
      description: sign in to existing account with specified mobile and expected
        info
      parameters:
      - description: sign in input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.TokenBundleOutput'
              type: object
      summary: sign in to existing account
      tags:
      - account
  /signup:
    post:
      consumes:
      - application/json
      description: create new account with specified mobile and expected info
      parameters:
      - description: sign up input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.TokenBundleOutput'
              type: object
      summary: signing up a new account
      tags:
      - account
  /status/{id}/{status}:
    patch:
      consumes:
      - application/json
      description: update status todo task with specified info and Account ID AND
        ID
      parameters:
      - description: todo ID
        in: path
        name: id
        required: true
        type: string
      - description: todo status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains error
          schema:
            allOf:
            - $ref: '#/definitions/todo.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/models.TodoEntity'
              type: object
      security:
      - Bearer Authenticate: []
      summary: update status todo task
      tags:
      - todos
swagger: "2.0"
